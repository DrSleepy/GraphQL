# Types
type User {
  _id: ID # NEEDS to be here if you want to query it.
  displayName: String
  age: Int
  email: String
  password: String
}

type AuthResponse {
  ok: Boolean
  errors: [Error]
  user: User
}

type Error {
  path: [String] # Is array to match Joi errors
  message: String
}

# Inputs
input RegisterInput {
  email: String!
  password: String!
  confirmPassword: String!
  gender: String!
}

input LoginInput {
  email: String!
  password: String!
}

# Queries and Mutations
type Query {
  myProfile: User
}

type Mutation {
  register(registerDetails: RegisterInput): AuthResponse
  login(loginDetails: LoginInput): AuthResponse
  logout: Boolean
}
